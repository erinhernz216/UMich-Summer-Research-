

#1) Read in the differential expression results from Gemma for each dataset:

#To start out with, I downloaded the Gemma differential expression output for the studies of interest.
#I put each study is in its own folder.

#I set working directory to where I downloaded the Gemma differential expression output for this particular study:
setwd("~/Desktop/GSE56028_Molecular regulation in the hippocampus")
list.files()
# [1] "analysis.results.txt"                                                    
# [2] "GSE56028 new code.R"                                                     
# [3] "GSE56028_Molecular regulation in the hippo.txt"                          
# [4] "Icon\r"                                                                  
# [5] "resultset_ID478752.data.txt"                                             
# [6] "resultset_ID478753.data.txt"                                             
# [7] "TempResultsJoined_NoNA_NoMultimapped_FoldChange_AveragedByGeneSymbol.csv"
# [8] "TempResultsJoined_NoNA_NoMultimapped_SE_AveragedByGeneSymbol.csv"        
# [9] "TempResultsJoined_NoNA_NoMultimapped_SV.csv"                             
# [10] "TempResultsJoined_NoNA_NoMultimapped_Tstat_AveragedByGeneSymbol.csv"     
# [11] "TempResultsJoined_NoNA_NoMultimapped.csv"                                
# [12] "TempResultsJoined.csv"

#This procedure for reading in the differential expression results was pretty easily generalizable, so I functionalized it:


ReadingInGemmaDE<-function(ResultSetFileNames){
  
  #Reading in the analysis results file:
  TempAnalysisResults<-read.delim("analysis.results.txt", sep="\t", stringsAsFactors = FALSE, comment.char = "#")
  
  #I placed these results in a list format:
  TempResultsToJoin<-list(TempAnalysisResults)
  
  for(i in c(1:length(ResultSetFileNames))){
    #The result set files are the detailed differential expression results for a particular variable:
    TempResultsToJoin[[i]]<-read.delim(ResultSetFileNames[i], sep="\t", stringsAsFactors = FALSE, comment.char = "#")
  }
  
  TempResultsJoined<<-join_all(TempResultsToJoin, by="Element_Name")
  #Note: I've heard from other students that the join() and join_all() functions in the plyr package can cause problems in newer versions of R - you may need to replace this with merge and merge_all
  
  #Saving the joined results:
  write.csv(TempResultsJoined, "TempResultsJoined.csv")
  
  rm(TempAnalysisResults, TempResultsToJoin)
  
  print("Outputted object: TempResultsJoined")
}


#Notes about parameters for function: ReadingInGemmaDE()
#ResultSetFileNames should be a character vector containing the names of the result files

#Example Usage of the function:

ReadingInGemmaDE(ResultSetFileNames=c("resultset_ID478752.data.txt", "resultset_ID478753.data.txt"))
#[1] "Outputted object: TempResultsJoined"

str(TempResultsJoined)
# 'data.frame':	29185 obs. of  22 variables:
#   $ Element_Name                                                                                      : int  10754876 10887640 10762224 10798094 10773266 10830285 10881771 10711706 10804508 10840076 ...
# $ Gene_Symbol                                                                                       : chr  "" "" "" "Fam50b" ...
# $ Gene_Name                                                                                         : chr  "" "" "" "family with sequence similarity 50, member B" ...
# $ NCBI_ID                                                                                           : chr  "" "" "" "306883" ...
# $ FoldChange_chronic.mild.stress                                                                    : num  0.07155 0.00303 -0.04226 -0.1682 -0.1216 ...
# $ Tstat_chronic.mild.stress                                                                         : num  1.002 0.0495 -0.5552 -1.16 -2.221 ...
# $ PValue_chronic.mild.stress                                                                        : num  0.3321 0.9612 0.5869 0.2642 0.0422 ...
# $ Gene_Symbol                                                                                       : chr  "" "" "" "Fam50b" ...
# $ Gene_Name                                                                                         : chr  "" "" "" "family with sequence similarity 50, member B" ...
# $ NCBI_ID                                                                                           : chr  "" "" "" "306883" ...
# $ FoldChange_fluoxetine                                                                             : num  0.0208 0.0592 0.0375 0.2264 0.0511 ...
# $ Tstat_fluoxetine                                                                                  : num  0.252 0.838 0.426 1.352 0.808 ...
# $ PValue_fluoxetine                                                                                 : num  0.804 0.415 0.676 0.196 0.431 ...
# $ FoldChange_imipramine                                                                             : num  -0.1323 -0.00332 0.0608 0.0996 -0.0333 ...
# $ Tstat_imipramine                                                                                  : num  -1.605 -0.0469 0.6918 0.5947 -0.527 ...
# $ PValue_imipramine                                                                                 : num  0.129 0.963 0.5 0.561 0.606 ...
# $ FoldChange_7.3.chloro.6.methyl.5.5.dioxo.11H.benzo.c.2.1.benzothiazepin.11.yl.amino.heptanoic.acid: num  -0.0622 0.0185 0.0926 0.0873 0.0452 ...
# $ Tstat_7.3.chloro.6.methyl.5.5.dioxo.11H.benzo.c.2.1.benzothiazepin.11.yl.amino.heptanoic.acid     : num  -0.755 0.262 1.053 0.521 0.716 ...
# $ PValue_7.3.chloro.6.methyl.5.5.dioxo.11H.benzo.c.2.1.benzothiazepin.11.yl.amino.heptanoic.acid    : num  0.462 0.797 0.309 0.61 0.485 ...
# $ FoldChange_agomelatine                                                                            : num  -0.0761 -0.0388 -0.0308 0.2495 0.0507 ...
# $ Tstat_agomelatine                                                                                 : num  -0.923 -0.549 -0.35 1.49 0.801 ...
# $ PValue_agomelatine                                                                                : num  0.37 0.591 0.731 0.157 0.435 ...

#3) Remove rows of data that have missing or unambiguous gene annotation

#Notably, using modern probe annotation, many of these probes now map to more than one gene symbol, and when this happens Gemma separates provides a list of all of the gene symbols that the probe maps to using a pipe. 
#There are also probes that no longer map to any gene symbol (annotated with ""). 

#This data processing step was pretty generalizable, so I functionalized it:

FilteringDEResults_GoodAnnotation<-function(TempResultsJoined){
  
  print("# of rows with missing NCBI annotation:")
  print(sum(TempResultsJoined$NCBI_ID==""|TempResultsJoined$NCBI_ID=="null"))
  
  print("# of rows with missing Gene Symbol annotation:")
  print(sum(TempResultsJoined$Gene_Symbol==""|TempResultsJoined$Gene_Symbol=="null"))
  
  print("# of rows mapped to multiple NCBI_IDs:")
  print(length(grep('\\|', TempResultsJoined$NCBI_ID)))
  
  print("# of rows mapped to multiple Gene Symbols:")
  print(length(grep('\\|', TempResultsJoined$Gene_Symbol)))
  
  #I only want the subset of data which contains rows that do not contain a Gene Symbol of ""
  TempResultsJoined_NoNA<-TempResultsJoined[(TempResultsJoined$Gene_Symbol==""|TempResultsJoined$Gene_Symbol=="null")==FALSE,]
  
  #I only want rows annotated with a single Gene Symbol (no pipe):
  TempResultsJoined_NoNA_NoMultimapped<<-TempResultsJoined_NoNA[-(grep('\\|', TempResultsJoined_NoNA$Gene_Symbol)),]
  
  print("# of rows with good annotation")
  print(nrow(TempResultsJoined_NoNA_NoMultimapped))
  
  #For record keeping (sometimes useful for troubleshooting later)
  write.csv(TempResultsJoined_NoNA_NoMultimapped, "TempResultsJoined_NoNA_NoMultimapped.csv")
  
  rm(TempResultsJoined_NoNA, TempResultsJoined_NoNA_NoMultimapped)
  
  print("Outputted object: TempResultsJoined_NoNA_NoMultimapped")
}

#Example usage of function:

FilteringDEResults_GoodAnnotation(TempResultsJoined)
# [1] "# of rows with missing NCBI annotation:"
# [1] 11911
# [1] "# of rows with missing Gene Symbol annotation:"
# [1] 11911
# [1] "# of rows mapped to multiple NCBI_IDs:"
# [1] 865
# [1] "# of rows mapped to multiple Gene Symbols:"
# [1] 865
# [1] "# of rows with good annotation"
# [1] 16409
# [1] "Outputted object: TempResultsJoined_NoNA_NoMultimapped"

str(TempResultsJoined_NoNA_NoMultimapped)
# $ Element_Name                                                                                      : int  10798094 10773266 10830285 10881771 10840076 10787129 10936526 10923385 10714409 10715870 ...
# $ Gene_Symbol                                                                                       : chr  "Fam50b" "Evc" "Tspyl4" "Nmnat1" ...
# $ Gene_Name                                                                                         : chr  "family with sequence similarity 50, member B" "EvC ciliary complex subunit 1" "TSPY-like 4" "nicotinamide nucleotide adenylyltransferase 1" ...
# $ NCBI_ID                                                                                           : chr  "306883" "289712" "309828" "298653" ...
# $ FoldChange_chronic.mild.stress                                                                    : num  -0.1682 -0.1216 0.0612 -0.0278 0.0561 ...
# $ Tstat_chronic.mild.stress                                                                         : num  -1.16 -2.221 1.439 -0.342 0.946 ...
# $ PValue_chronic.mild.stress                                                                        : num  0.2642 0.0422 0.1707 0.7375 0.3594 ...
# $ Gene_Symbol                                                                                       : chr  "Fam50b" "Evc" "Tspyl4" "Nmnat1" ...
# $ Gene_Name                                                                                         : chr  "family with sequence similarity 50, member B" "EvC ciliary complex subunit 1" "TSPY-like 4" "nicotinamide nucleotide adenylyltransferase 1" ...
# $ NCBI_ID                                                                                           : chr  "306883" "289712" "309828" "298653" ...
# $ FoldChange_fluoxetine                                                                             : num  0.2264 0.0511 -0.0255 -0.1751 -0.1317 ...
# $ Tstat_fluoxetine                                                                                  : num  1.352 0.808 -0.52 -1.861 -1.923 ...
# $ PValue_fluoxetine                                                                                 : num  0.1964 0.4315 0.6106 0.0824 0.0737 ...
# $ FoldChange_imipramine                                                                             : num  0.0996 -0.0333 -0.0893 0.0546 -0.0403 ...
# $ Tstat_imipramine                                                                                  : num  0.595 -0.527 -1.819 0.58 -0.589 ...
# $ PValue_imipramine                                                                                 : num  0.561 0.606 0.089 0.57 0.565 ...
# $ FoldChange_7.3.chloro.6.methyl.5.5.dioxo.11H.benzo.c.2.1.benzothiazepin.11.yl.amino.heptanoic.acid: num  0.0873 0.0452 -0.072 -0.0301 -0.0846 ...
# $ Tstat_7.3.chloro.6.methyl.5.5.dioxo.11H.benzo.c.2.1.benzothiazepin.11.yl.amino.heptanoic.acid     : num  0.521 0.716 -1.465 -0.321 -1.234 ...
# $ PValue_7.3.chloro.6.methyl.5.5.dioxo.11H.benzo.c.2.1.benzothiazepin.11.yl.amino.heptanoic.acid    : num  0.61 0.485 0.164 0.753 0.236 ...
# $ FoldChange_agomelatine                                                                            : num  0.2495 0.0507 0.0254 -0.1148 0.0524 ...
# $ Tstat_agomelatine                                                                                 : num  1.49 0.801 0.516 -1.22 0.764 ...
# $ PValue_agomelatine                                                                                : num  0.157 0.435 0.613 0.241 0.456 ...
####################

#2) Identifying the results for the variables of interest for the meta-analysis:

#At this point, we should double-check:

#A) Whether Gemma has used a reference (baseline) group that makes sense for our analysis 

#B) Which group comparisons are actually of interest to us.


CollapsingDEResults_OneResultPerGene<-function(GSE_ID, TempResultsJoined_NoNA_NoMultimapped, ComparisonsOfInterest, NamesOfFoldChangeColumns, NamesOfTstatColumns){
  
  print("Double check that the vectors containing the two fold change and tstat column names contain the same order as the group comparisons of interest - otherwise this function won't work properly!  If the order matches, proceed:")
  
  print("# of rows with unique NCBI IDs:")
  print(length(unique(TempResultsJoined_NoNA_NoMultimapped$NCBI_ID)))
  
  print("# of rows with unique Gene Symbols:")
  print(length(unique(TempResultsJoined_NoNA_NoMultimapped$Gene_Symbol)))
  
  #We will need both the Log2FC and T-stats averaged:
  
  TempResultsJoined_NoNA_NoMultimapped_FoldChange_Average<-list()
  
  for(i in c(1:length(NamesOfFoldChangeColumns))){
    
    TempResultsJoined_NoNA_NoMultimapped_FoldChange_Average[[i]]<-tapply(NamesOfFoldChangeColumns[i][[1]], TempResultsJoined_NoNA_NoMultimapped$Gene_Symbol, mean)
    
  }
  
  TempResultsJoined_NoNA_NoMultimapped_FoldChange_AveragedByGeneSymbol<-do.call(cbind, TempResultsJoined_NoNA_NoMultimapped_FoldChange_Average)
  
  print("Dimensions of Fold Change matrix, averaged by gene symbol:")
  print(dim(TempResultsJoined_NoNA_NoMultimapped_FoldChange_AveragedByGeneSymbol))
  
  colnames(TempResultsJoined_NoNA_NoMultimapped_FoldChange_AveragedByGeneSymbol)<-ComparisonsOfInterest
  
  write.csv(TempResultsJoined_NoNA_NoMultimapped_FoldChange_AveragedByGeneSymbol, "TempResultsJoined_NoNA_NoMultimapped_FoldChange_AveragedByGeneSymbol.csv")
  
  
  TempResultsJoined_NoNA_NoMultimapped_Tstat_Average<-list()
  
  for(i in c(1:length(NamesOfFoldChangeColumns))){
    
    TempResultsJoined_NoNA_NoMultimapped_Tstat_Average[[i]]<-tapply(NamesOfTstatColumns[i][[1]], TempResultsJoined_NoNA_NoMultimapped$Gene_Symbol, mean)
    
  }
  
  TempResultsJoined_NoNA_NoMultimapped_Tstat_AveragedByGeneSymbol<-do.call(cbind, TempResultsJoined_NoNA_NoMultimapped_Tstat_Average)
  
  colnames(TempResultsJoined_NoNA_NoMultimapped_Tstat_AveragedByGeneSymbol)<-ComparisonsOfInterest
  
  write.csv(TempResultsJoined_NoNA_NoMultimapped_Tstat_AveragedByGeneSymbol, "TempResultsJoined_NoNA_NoMultimapped_Tstat_AveragedByGeneSymbol.csv")
  
  
  
  TempResultsJoined_NoNA_NoMultimapped_SE<-list()
  
  for(i in c(1:length(NamesOfFoldChangeColumns))){
    TempResultsJoined_NoNA_NoMultimapped_SE[[i]]<-NamesOfFoldChangeColumns[i][[1]]/NamesOfTstatColumns[i][[1]]
  }
  
  
  TempResultsJoined_NoNA_NoMultimapped_SE_Average<-list()
  
  for(i in c(1:length(NamesOfFoldChangeColumns))){
    
    TempResultsJoined_NoNA_NoMultimapped_SE_Average[[i]]<-tapply(TempResultsJoined_NoNA_NoMultimapped_SE[[i]], TempResultsJoined_NoNA_NoMultimapped$Gene_Symbol, mean)
    
  }
  
  TempResultsJoined_NoNA_NoMultimapped_SE_AveragedByGeneSymbol<-do.call(cbind, TempResultsJoined_NoNA_NoMultimapped_SE_Average)
  
  colnames(TempResultsJoined_NoNA_NoMultimapped_SE_AveragedByGeneSymbol)<-ComparisonsOfInterest
  
  write.csv(TempResultsJoined_NoNA_NoMultimapped_SE_AveragedByGeneSymbol, "TempResultsJoined_NoNA_NoMultimapped_SE_AveragedByGeneSymbol.csv")
  
  #For running our meta-analysis, we are actually going to need the sampling variance instead of the standard error
  #The sampling variance is just the standard error squared.
  
  TempResultsJoined_NoNA_NoMultimapped_SV<-(TempResultsJoined_NoNA_NoMultimapped_SE_AveragedByGeneSymbol)^2
  
  write.csv(TempResultsJoined_NoNA_NoMultimapped_SV, "TempResultsJoined_NoNA_NoMultimapped_SV.csv")
  
  TempMasterResults<-list(Log2FC=TempResultsJoined_NoNA_NoMultimapped_FoldChange_AveragedByGeneSymbol, Tstat=TempResultsJoined_NoNA_NoMultimapped_Tstat_AveragedByGeneSymbol, SE=TempResultsJoined_NoNA_NoMultimapped_SE_AveragedByGeneSymbol, SV=TempResultsJoined_NoNA_NoMultimapped_SV)
  
  assign(paste("DEResults", GSE_ID, sep="_"), TempMasterResults, envir = as.environment(1))
  
  print(paste("Output: Named DEResults", GSE_ID, sep="_"))
  
  rm(TempMasterResults, TempResultsJoined_NoNA_NoMultimapped_SV, TempResultsJoined_NoNA_NoMultimapped_SE, TempResultsJoined_NoNA_NoMultimapped_FoldChange_AveragedByGeneSymbol, TempResultsJoined_NoNA_NoMultimapped_FoldChange_Average, TempResultsJoined_NoNA_NoMultimapped_Tstat_AveragedByGeneSymbol, TempResultsJoined_NoNA_NoMultimapped_Tstat_Average)
  
}


#Notes about parameters for function CollapsingDEResults_OneResultPerGene()
#GSE_ID is a string indicating the name of the Gemma dataset
#TempResultsJoined_NoNA_NoMultimapped is the data frame outputted by our previous function
#ComparisonsOfInterest is a character vector containing a list of group comparisons of interest within this dataset. Important: These group comparisons should be listed in exactly the same order as the order that you provide the column names for their associated Fold Change and Tstat output.
#NamesOfFoldChangeColumns is a list containing the columns of TempResultsJoined_NoNA_NoMultimapped containing the FoldChange results for your comparisons of interes, in the same order as the ComparisonsOfInterest vector
#NamesOfTstatColumns is a list containing the columns of TempResultsJoined_NoNA_NoMultimapped containing the Tstat results for your comparisons of interes, in the same order as the ComparisonsOfInterest vector

#Example function usage:

CollapsingDEResults_OneResultPerGene(GSE_ID="GSE56028", TempResultsJoined_NoNA_NoMultimapped, ComparisonsOfInterest=c("GSE56028_Fluoxetine_vs_Control", "GSE56028_Imipramine_vs_Control","GSE56028_Agomelatine_vs_Control"), NamesOfFoldChangeColumns=list(TempResultsJoined_NoNA_NoMultimapped$FoldChange_fluoxetine, TempResultsJoined_NoNA_NoMultimapped$FoldChange_imipramine,TempResultsJoined_NoNA_NoMultimapped$FoldChange_agomelatine), NamesOfTstatColumns=list(TempResultsJoined_NoNA_NoMultimapped$Tstat_fluoxetine, TempResultsJoined_NoNA_NoMultimapped$Tstat_imipramine,TempResultsJoined_NoNA_NoMultimapped$Tstat_agomelatine))
# [1] "Double check that the vectors containing the two fold change and tstat column names contain the same order as the group comparisons of interest - otherwise this function won't work properly!  If the order matches, proceed:"
# [1] "# of rows with unique NCBI IDs:"
# [1] 15617
# [1] "# of rows with unique Gene Symbols:"
# [1] 15617
# [1] "Dimensions of Fold Change matrix, averaged by gene symbol:"
# [1] 15617     3
# [1] "Output: Named DEResults_GSE56028"

str(DEResults_GSE56028)
# List of 4
# $ Log2FC: num [1:15617, 1:3] -0.01397 0.1506 -0.04246 0.00956 -0.06863 ...
# ..- attr(*, "dimnames")=List of 2
# .. ..$ : chr [1:15617] "A1bg" "A1cf" "A2m" "A3galt2" ...
# .. ..$ : chr [1:3] "GSE56028_Fluoxetine_vs_Control" "GSE56028_Imipramine_vs_Control" "GSE56028_Agomelatine_vs_Control"
# $ Tstat : num [1:15617, 1:3] -0.121 1.4 -0.242 0.12 -0.68 ...
# ..- attr(*, "dimnames")=List of 2
# .. ..$ : chr [1:15617] "A1bg" "A1cf" "A2m" "A3galt2" ...
# .. ..$ : chr [1:3] "GSE56028_Fluoxetine_vs_Control" "GSE56028_Imipramine_vs_Control" "GSE56028_Agomelatine_vs_Control"
# $ SE    : num [1:15617, 1:3] 0.1158 0.1076 0.1755 0.0797 0.1009 ...
# ..- attr(*, "dimnames")=List of 2
# .. ..$ : chr [1:15617] "A1bg" "A1cf" "A2m" "A3galt2" ...
# .. ..$ : chr [1:3] "GSE56028_Fluoxetine_vs_Control" "GSE56028_Imipramine_vs_Control" "GSE56028_Agomelatine_vs_Control"
# $ SV    : num [1:15617, 1:3] 0.01342 0.01157 0.03081 0.00636 0.01018 ...
# ..- attr(*, "dimnames")=List of 2
# .. ..$ : chr [1:15617] "A1bg" "A1cf" "A2m" "A3galt2" ...
# .. ..$ : chr [1:3] "GSE56028_Fluoxetine_vs_Control" "GSE56028_Imipramine_vs_Control" "GSE56028_Agomelatine_vs_Control"

head(DEResults_GSE56028[[1]])
# GSE56028_Fluoxetine_vs_Control GSE56028_Imipramine_vs_Control GSE56028_Agomelatine_vs_Control
# A1bg                         -0.013970                       0.051460                         0.12100
# A1cf                          0.150600                       0.060240                        -0.08315
# A2m                          -0.042460                      -0.267200                        -0.08799
# A3galt2                       0.009562                       0.078880                        -0.05201
# A4galt                       -0.068630                      -0.003897                        -0.06425
